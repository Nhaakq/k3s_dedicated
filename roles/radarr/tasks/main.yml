- name: Deploy Values charts
  ansible.builtin.template:
    src: templates/radarr_deployment.yaml.j2
    dest: /tmp/radarr_deployment.yaml
    owner: "{{ kub_user }}"
    group: "{{ kub_group }}"
  tags:
    - radarr_install

- name: Create a deployment
  kubernetes.core.k8s:
    apply: true
    state: present
    namespace: "{{ media_namespace }}"
    src: "/tmp/radarr_deployment.yaml"
  tags:
    - radarr_install

- name: Wait until the file {{ path_config }}/config/{{ app_name }}/config.xml exist
  ansible.builtin.wait_for:
    path: "{{ path_config }}/config/{{ app_name }}/config.xml"
  tags:
    - radarr_install

- name: Find {{ app_name }} Api Key
  ansible.builtin.slurp:
    src: "{{ path_config }}/config/{{ app_name }}/config.xml"
  register: api_key

- name: Setting Fact Api Key
  ansible.builtin.set_fact:
    api_key_app: "{{ api_key['content'] | b64decode | regex_findall('<ApiKey>([^<]*)</ApiKey>') | first }}"

- name: Get body file
  ansible.builtin.slurp:
    src: "/tmp/body_DownloadClients"
  register: body_json

- name: Create Transmission Configuration
  ansible.builtin.uri:
    url: https://{{ web_name }}.{{ domain_name }}/api/v3/downloadclient?apikey={{ api_key_app }}
    method: POST
    body_format: json
    status_code: [200, 202, 201]
    return_content: true
    validate_certs: false
    headers:
      Content-Type: application/json
      User-Agent: PostmanRuntime/7.29.2
      Accept-Encoding: gzip, deflate, br
    body: "{{ body_json['content'] | b64decode }}"