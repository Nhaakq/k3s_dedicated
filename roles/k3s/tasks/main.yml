- name: Upgrade all packages
  ansible.builtin.dnf:
    name: "*"
    state: latest
  tags:
    - packages

- name: Install packages
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: latest
  loop:
    - git
  tags:
    - packages

- name: Download k3s installer
  ansible.builtin.get_url:
    url: https://get.k3s.io
    dest: /tmp/install_k3s.sh
    mode: 'u+rwx'
  tags:
    - k3s
- name: exec the k3s installer
  ansible.builtin.shell: 
    cmd: "sh /tmp/install_k3s.sh >> install_k3s_{{ ansible_date_time.iso8601_basic_short }}.log"
  tags:
    - k3s

- name: Start service k3s, if not started
  ansible.builtin.service:
    name: k3s.service
    state: started
    enabled: yes
  tags:
    - k3s

- name: Insert yum repo for kube
  ansible.builtin.template:
    src: kubernetes.repo.j2
    dest: /etc/yum.repos.d/kubernetes.repo
  tags:
    - repository

- name: Get latest release kubectl bin
  ansible.builtin.shell:
    cmd: 'curl -o /root/kubectl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"'
  register: kubectl_file
  tags:
    - kub_conf

- name: Copy kubectl file
  ansible.builtin.copy:
    src: ~/kubectl
    dest: /usr/bin/kubectl
    mode: a+x
    owner: root
    group: root
    remote_src: yes
  tags:
    - kub_conf

- name: Create Directory for kub conf
  ansible.builtin.file:
    path: ~/.kube
    state: directory
  tags:
    - kub_conf
    - kub_file

- name: Copy k3s conf file
  ansible.builtin.shell:
    cmd: '\cp -r /etc/rancher/k3s/k3s.yaml ~/.kube/config'
  tags:
    - kub_conf
    - kub_file

- name: 'https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3'
  ansible.builtin.uri:
    url: 'https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3'
    method: GET
    dest: /tmp/get_helm.sh
    follow_redirects: safe
    mode: 700
  register: result  
  tags:
    - helm

- name: Replace a localhost entry searching for a literal string to avoid escaping
  ansible.builtin.lineinfile:
    path: /tmp/get_helm.sh
    search_string: '${HELM_INSTALL_DIR:="/usr/local/bin"}'
    line: '${HELM_INSTALL_DIR:="/usr/bin"}'
    mode: 700
  tags:
    - helm

- name: Launch helm script
  shell:
      "./get_helm.sh"
  args:
    chdir: "/tmp" 
  tags:
    - helm

- name: install pre-requisites
  pip:
    name:
      - openshift
      - pyyaml
      - kubernetes 
  tags:
    - kub_conf

- name: Create k8s namespace
  kubernetes.core.k8s:
    name: "{{ media_namespace }}"
    api_version: v1
    kind: Namespace
    state: present
  tags:
    - kub_conf
    - namespace

- name: Create /data Directory
  ansible.builtin.file:
    path: /data
    state: directory
    recurse: true
    mode: 0777
  tags:
    - kub_conf
    - pvc_creation

- name: Copy file for Persistent Volume
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/tmp/{{ item }}"
  loop:
    - pv_config.yaml.j2
    - pv_data.yaml.j2
    - pvc_config.yaml.j2
    - pvc_data.j2
  tags:
    - kub_conf
    - pvc_creation

- name: Create a deployment
  kubernetes.core.k8s:
    state: present            # State=present when you need to create new object
    namespace: "{{ media_namespace }}" # defining the namespace
    src: "/tmp/{{ item }}"
  loop:
    - pv_config.yaml.j2
    - pv_data.yaml.j2
    - pvc_config.yaml.j2
    - pvc_data.j2
  tags:
    - kub_conf
    - pvc_creation