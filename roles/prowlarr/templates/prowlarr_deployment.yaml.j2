---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ app_name }}
  namespace: {{ media_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ app_name }}
  template:
    metadata:
      labels:
        app: {{ app_name }}
    spec:
      volumes:
        - name: {{ app_name }}-config
          persistentVolumeClaim:
            claimName: {{ name_pvc_config }}
        - name: {{ app_name }}-data
          persistentVolumeClaim:
            claimName: {{ name_pvc_data }}
      containers:
        - name: {{ app_name }}
          image: {{ container_image }}
          imagePullPolicy: Always
          env:
            - name: UID
              value: "{{ kub_user_uid }}"
            - name: PGID
              value: "{{ kub_group_gid }}"
            - name: UMASK
              value: "002"
            - name: TZ
              value: "Europe/Paris"
          ports:
            - containerPort: {{ app_port }}
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: "/config"
              subPath: config/{{ app_name }}
              name: {{ app_name }}-config
            - mountPath: "/media"
              subPath: media/
              name: {{ app_name }}-data
---
apiVersion: v1
kind: Service
metadata:
  name: {{ app_name }}
  namespace: {{ media_namespace }}
spec:
  ports:
  - port: {{  service_port }}
    targetPort: {{ app_port }}
    name: tcp
  selector:
    app: {{ app_name }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
      traefik.ingress.kubernetes.io/router.middlewares: {{ media_namespace }}-redirect-https@kubernetescrd,{{ auth_namespace }}-forwardauth-authelia@kubernetescrd
      cert-manager.io/cluster-issuer: {{ domain_name }}-issuer
      traefik.ingress.kubernetes.io/router.entryPoints: web,websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      kubernetes.io/ingress.class: traefik
  name: ingress-{{ app_name }}
  namespace: {{ media_namespace }}
spec:
  rules:
    - host: {{ web_name }}.{{ domain_name }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ app_name }}
                port:
                  number: {{  service_port }}
  tls:
  - hosts:
    - {{ web_name }}.{{ domain_name }}
    secretName: {{ app_name }}-tls-cer