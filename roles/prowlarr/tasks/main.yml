- name: Deploy Values charts
  ansible.builtin.template:
    src: templates/prowlarr_deployment.yaml.j2
    dest: /tmp/prowlarr_deployment.yaml
    owner: "{{ kub_user }}"
    group: "{{ kub_group }}"
  tags:
    - prowlarr_install

- name: Create a deployment
  kubernetes.core.k8s:
    apply: true
    state: present
    namespace: "{{ media_namespace }}"
    src: "/tmp/prowlarr_deployment.yaml"
  tags:
    - prowlarr_install

- name: Wait till the {{ app_name }} pod is running
  kubernetes.core.k8s_info:
    kind: Pod
    wait: yes
    label_selectors:
      - "app = {{ app_name }}"
    namespace: "{{ media_namespace }}"
    wait_sleep: 10
    wait_timeout: 360
    wait_condition:
      type: ContainersReady
      status: "True"
  register: demo

- name: Change line for remove authent reauirement on web
  replace:
    path: "{{ path_config }}/config/prowlarr/config.xml"
    regexp: '<AuthenticationMethod>None</AuthenticationMethod>'
    replace: "<AuthenticationMethod>External</AuthenticationMethod>"
  register: auth_change

- name: kill {{ app_name }} pod
  kubernetes.core.k8s:
    state: absent
    api_version: v1
    kind: Pod
    namespace: "{{ media_namespace }}"
    label_selectors:
      - "app = {{ app_name }}"
  when: auth_change.changed

- name: Wait until the file {{ path_config }}/config/{{ app_name }}/config.xml exist
  ansible.builtin.wait_for:
    path: "{{ path_config }}/config/{{ app_name }}/config.xml"
  tags:
    - prowlarr_install

- name: Find {{ app_name }} Api Key
  ansible.builtin.slurp:
    src: "{{ path_config }}/config/{{ app_name }}/config.xml"
  register: api_key

- name: Setting Fact Api Key
  ansible.builtin.set_fact:
    api_key_app: "{{ api_key['content'] | b64decode | regex_findall('<ApiKey>([^<]*)</ApiKey>') | first }}"

- name: Get body file
  ansible.builtin.slurp:
    src: "/tmp/body_DownloadClients"
  register: body_json

- name: Check {{ app_name }} configuration for Torrent client
  ansible.builtin.uri:
    url: https://{{ web_name }}.{{ domain_name }}/api/v3/downloadclient?apikey={{ api_key_app }}
    method: GET
    return_content: true
    validate_certs: false
  register: is_client_exist

- name: Create Transmission Configuration
  ansible.builtin.uri:
    url: https://{{ web_name }}.{{ domain_name }}/api/v1/downloadclient?apikey={{ api_key_app }}
    method: POST
    body_format: json
    status_code: [200, 202, 201]
    validate_certs: false
    headers:
      Content-Type: application/json
    body: "{{ body_json['content'] | b64decode }}"
  when: is_client_exist|length < 1
  tags:
    - api