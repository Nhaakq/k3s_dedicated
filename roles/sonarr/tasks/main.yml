- name: Create Directory for {{ app_name }}
  ansible.builtin.file:
    path: "{{ path_config }}/config/{{ app_name }}/"
    state: directory
    owner: "{{ kub_user }}"
    group: "{{ kub_group }}"
  tags:
    - sonarr_deployment

- name: Create config file for {{ app_name }}
  ansible.builtin.template:
    src: templates/sonarr_conf.xml.j2
    dest: "{{ path_config }}/config/{{ app_name }}/config.xml"
    owner: "{{ kub_user }}"
    group: "{{ kub_group }}"
  tags:
    - sonarr_deployment

- name: Deploy Values charts
  ansible.builtin.template:
    src: templates/{{ item }}
    dest: /tmp/{{ item | basename | regex_replace('\.j2$', '') }}
    owner: "{{ kub_user }}"
    group: "{{ kub_group }}"
  loop:
    - sonarr_deployment.yaml.j2
    - sonarr_DownloadClients.j2
  tags:
    - sonarr_install

- name: Create a deployment
  kubernetes.core.k8s:
    apply: true
    state: present
    namespace: "{{ media_namespace }}"
    src: "/tmp/sonarr_deployment.yaml"
  tags:
    - sonarr_install

- name: Wait for {{ app_name }} API access
  ansible.builtin.uri:
    url: "https://{{ web_name }}.{{ domain_name }}/api/v3/downloadclient?apikey={{ sonarr_api_key }}"
    return_content: True
    timeout: 2
    validate_certs: "{{ validate_certs }}"
  register: sonarr_url
  until: sonarr_url['status']|default(0) == 200
  retries: 40
  delay: 3
  tags:
    - sonarr_install

- name: Check {{ app_name }} configuration for Torrent client
  ansible.builtin.uri:
    url: https://{{ web_name }}.{{ domain_name }}/api/v3/downloadclient?apikey={{ sonarr_api_key }}
    method: GET
    return_content: true
    validate_certs: "{{ validate_certs }}"
  register: is_client_exist
  tags:
    - api

- name: Get body file
  ansible.builtin.slurp:
    src: "/tmp/sonarr_DownloadClients"
  register: body_json
  when: is_client_exist.json|length < 1
  tags:
    - api

- name: Create Transmission Configuration
  ansible.builtin.uri:
    url: https://{{ web_name }}.{{ domain_name }}/api/v3/downloadclient?apikey={{ sonarr_api_key }}
    method: POST
    body_format: json
    status_code: [200, 202, 201]
    return_content: true
    validate_certs: "{{ validate_certs }}"
    headers:
      Content-Type: application/json
      User-Agent: PostmanRuntime/7.29.2
      Accept-Encoding: gzip, deflate, br
    body: "{{ body_json['content'] | b64decode }}"
  when: is_client_exist.json|length < 1
  tags:
    - api