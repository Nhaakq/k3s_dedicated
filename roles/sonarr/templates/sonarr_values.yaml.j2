---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: media-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      volumes:
        - name: sonarr-config
          persistentVolumeClaim:
            claimName: {{ name_pvc_config }}
      containers:
        - name: sonarr
          image: linuxserver/sonarr
          env:
            - name: UID
              value: "{{ kub_user_uid }}"
            - name: PGID
              value: "{{ kub_user_gid }}"
            - name: UMASK
              value: "002"
            - name: TZ
              value: "Europe/Paris"
          imagePullPolicy: Always
          ports:
            - containerPort: 8989
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: "/config"
              subPath: config/sonarr
              name: sonarr-config
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr
  namespace: media-server
spec:
  ports:
  - port: 5678
    targetPort: 8989
    name: tcp
  selector:
    app: sonarr
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
      cert-manager.io/cluster-issuer: orko.fr-issuer
      traefik.ingress.kubernetes.io/redirect-entry-point: https
      traefik.ingress.kubernetes.io/redirect-permanent: "true"
  name: sonarr-ingress
  namespace: media-server
spec:
  rules:
    - host: sonarr.orko.fr
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sonarr
                port:
                  number: 5678
  tls:
  - hosts:
    - sonarr.orko.fr
    secretName: sonarr-tls-cer
